package br.ufes.inf.lprm.scene.base;

import br.ufes.inf.lprm.situation.*;
import br.ufes.inf.lprm.situation.events.*;

declare SituationEvent
	@role(event)
	@timestamp(timestamp)
end

rule "SituationActivation"
    salience 9999999
	when
		$act: CurrentSituation(situation == null, $type: type, $cast: cast, $timestamp: timestamp)
	then
		$act.setSituation(SituationHelper.activateSituation(drools, $cast, $type, $timestamp));
		//tests
		$act.getSituation().setDetectionTimestamp($act.getTimestamp());
		update($act);
end

rule "SituationDeactivation"
    salience 9999999
	when
		$sit: SituationType(active==true, local==true)
		not (exists CurrentSituation(situation == $sit))
	then
		SituationHelper.deactivateSituation(drools, (Object) $sit);
end

query "CurrentSituation" (String tp, int hash)
	curr: CurrentSituation(this.situation != null, sit: this.situation, this.typename == tp, this.hashcode == hash)
end
